// src/services/example.ts

import { EmbedBuilder } from "discord.js";
import { Service } from "@/core/abstractions/Service";
import { IServiceDependencies } from "@/core/abstractions/interface/IDependencies";

/**
 * @class PingService
 * @description –°–µ—Ä–≤–∏—Å, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–∏–π –ª–æ–≥–∏–∫—É –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /ping.
 */
export class PingService extends Service {
    constructor(deps: IServiceDependencies) {
        super(deps);
        this.logger.info("PingService –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.");
    }

    /**
     * –°–æ–∑–¥–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç EmbedBuilder —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∑–∞–¥–µ—Ä–∂–∫–µ.
     * @param {number} websocketHeartbeat - –ó–∞–¥–µ—Ä–∂–∫–∞ WebSocket API –≤ –º—Å.
     * @param {number} roundtripLatency - –ó–∞–¥–µ—Ä–∂–∫–∞ –æ—Ç–≤–µ—Ç–∞ (roundtrip) –≤ –º—Å.
     * @returns {EmbedBuilder}
     */
    public createPingEmbed(
        websocketHeartbeat: number,
        roundtripLatency: number
    ): EmbedBuilder {
        this.logger.debug(
            `–°–æ–∑–¥–∞–Ω–∏–µ embed –¥–ª—è –ø–∏–Ω–≥–∞: API=${websocketHeartbeat}ms, Roundtrip=${roundtripLatency}ms`
        );

        const embed = new EmbedBuilder()
            .setColor("#0099ff")
            .setTitle("üèì –ü–æ–Ω–≥!")
            .addFields(
                {
                    name: "–ó–∞–¥–µ—Ä–∂–∫–∞ API (WebSocket)",
                    value: `\`${websocketHeartbeat}–º—Å\``,
                    inline: true,
                },
                {
                    name: "–ó–∞–¥–µ—Ä–∂–∫–∞ –æ—Ç–≤–µ—Ç–∞ (Roundtrip)",
                    value: `\`${roundtripLatency}–º—Å\``,
                    inline: true,
                }
            )
            .setTimestamp();

        return embed;
    }
}
